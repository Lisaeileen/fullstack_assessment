name: CI Pipeline

on: 
  pull_request:
    branches:
      - main 

jobs:
  build:
    name: Build and analyze

    runs-on: ubuntu-latest

    steps: 
    - name: Check out code
      uses: actions/checkout@v4
      # with:
      #   ref: feature

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '15'

    - name: Install dependencies
      run: |
        if ! npm install; then
          echo "installation was unsuccessful"
          exit 1
        else
          echo "installation was successful"
        fi

    - name: Run linter using ESLint
      run: |
        if ! npm run lint; then
          echo "lint was unsuccessful"
          exit 1
        else
          echo "lint succeeded"
        fi

    - name: Run formatter using Prettier
      run: |
        if ! npm run prettier-write; then
          echo "Prettier was unsuccessful"
          exit 1
        else
          echo "Prettier succeeded"
        fi

    - name: Run tests using Jest
      env: 
        CI: true
      run: |
        if ! npm test; then
          echo "Jest was unsuccessful"
          exit 1
        else
          echo "Jest succeeded"
        fi

    - name: Build project
      run: |
        if ! npm run build; then
          echo "Build was unsuccessful"
          exit 1
        else
          echo "Build succeeded"
        fi

  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file="terraform/env/${{ github.ref_name }}.tfvars"

      - name: Terraform Apply
        if: github.ref_name == 'stage' || github.ref_name == 'prod'
        working-directory: ./terraform
        run: terraform apply -auto-approve -var-file="terraform/env/${{ github.ref_name }}.tfvars"
